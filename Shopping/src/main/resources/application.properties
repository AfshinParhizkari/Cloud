ip.address=afshin
# ---------------------------------IDENTITY
spring.application.name= shopping
# ----------------------------------EMBEDDED SERVER CONFIGURATION
server.port=4043
#server.servlet.context-path=
server.servlet.context-path=/ddd
# ---------------------------------- Actuater Endpoints,Metrics,Audit
management.endpoints.web.exposure.include = *  
#management.endpoints.web.expose = *
management.server.port=7083 
management.endpoint.health.show-details=ALWAYS
management.endpoint.info.enabled=true
management.endpoint.sessions.enabled=true
management.endpoint.beans.enabled=true
management.endpoint.caches.enabled=true
management.endpoint.jolokia.enabled=true
# ---------------------------------- Doc&Test for Rest Services: http://afshin:4043/ddd/api-ui
springdoc.swagger-ui.path=/api-ui
springdoc.api-docs.path=/api-json
springdoc.show-actuator=true
# ---------------------------------h2 DATASOURCE
spring.datasource.url=jdbc:h2:mem:shopping;DATABASE_TO_UPPER=false
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.jpa.generate-ddl=true
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.defer-datasource-initialization=true
# ---------------------------------h2 Console  http://afshin:4043/ddd/h2
spring.h2.console.enabled=true
spring.h2.console.path=/h2
# Whether to enable trace output.
spring.h2.console.settings.trace=false
# Whether to enable remote access.
spring.h2.console.settings.web-allow-others=true
# ---------------------------------- RabbitMQ Config
spring.rabbitmq.host=${ip.address}
spring.rabbitmq.port=5672
spring.rabbitmq.username=admin
spring.rabbitmq.password=passw123
# create an AmqpAdmin bean:
spring.rabbitmq.dynamic=true
rabbitmq.exchange=orderEx
# ---------------------------------Product Resources
#product.find=http://${ip.address}:4042/ddd/product/find
#people.who=http://${ip.address}:4041/ddd/people/who
product.find=http://product/ddd/product/find
people.who=http://people/ddd/people/who
# ---------------Eureka SD address for POST(Register),PUT(HeartBeat),Delete,Get
eureka.client.service-url.defaultZone=http://${ip.address}:8761/eureka
eureka.instance.hostname=${ip.address}
# ---------------LoadBalanced Config  --server.port=9091
spring.cloud.loadbalancer.service-discovery.timeout=3000
spring.cloud.loadbalancer.configurations=default
spring.cloud.loadbalancer.retry.max-retries-on-same-service-instance=0
spring.cloud.loadbalancer.retry.max-retries-on-next-service-instance=1
# ---------------circuitbreaker resilience4j
resilience4j.circuitbreaker.configs.default.register-health-indicator=true
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.configs.default.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.default.event-consumer-buffer-size=10
resilience4j.circuitbreaker.configs.default.record-exceptions=java.net.ConnectException, java.io.IOException, java.util.concurrent.TimeoutException
resilience4j.circuitbreaker.instances.whoami.base-config=default
resilience4j.circuitbreaker.instances.products.base-config=default
